tiktok-auth.client_id=7260025883677704193
tiktok-auth.client_secret=2b93d9c64e2c2c2161e7d297cb41f3dfc8d780be
tiktok-auth.grant_type_Auth_Code=authorization_code
tiktok-auth.redirect_uri=https://brandplus.ai/
tiktok-auth.endpoint=https://business-api.tiktok.com/open_api/v1.3/tt_user/oauth2/token/

tiktok-ref.client_id=7260025883677704193
tiktok-ref.client_secret=2b93d9c64e2c2c2161e7d297cb41f3dfc8d780be
tiktok-ref.grant_type_Ref_Token=refresh_token
tiktok-ref.endpoint=https://business-api.tiktok.com/open_api/v1.3/tt_user/oauth2/refresh_token/

api.access.token=act.f210ca1b63494090bbc7ca2390552dabDO2sgr3y7gBCh4TUdeKEmx4wie5V!6369
creatorID=_0003ohEOycKy5bOJINSSXRcxbtoigbI9_wH

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url = jdbc:mysql://database-1.chugpmha4d6s.us-west-1.rds.amazonaws.com:3306/brand_plus?useSSL=false
spring.datasource.username = neobest01
spring.datasource.password = Qzj950925.
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

# Logging configurations
logging.level.org.hibernate.stat=debug
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.type=trace

# MyBatis configuration
mybatis.configuration.map-underscore-to-camel-case=true


server.port=8081
